JAVA PROFILE 1.0.1, created Fri May 30 22:50:55 2014

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=50000170, id = 200002, name="HPROF gc_finish watcher", group="system")
THREAD START (obj=50000170, id = 200001, name="main", group="main")
THREAD END (id = 200001)
THREAD START (obj=50000170, id = 200003, name="DestroyJavaVM", group="main")
THREAD END (id = 200003)
TRACE 302575:
	java.io.BufferedInputStream.read(<Unknown Source>:Unknown line)
	java.io.DataInputStream.readInt(<Unknown Source>:Unknown line)
	java.util.Currency.readIntArray(<Unknown Source>:Unknown line)
	java.util.Currency.access$000(<Unknown Source>:Unknown line)
TRACE 301985:
	java.text.MessageFormat.applyPattern(<Unknown Source>:Unknown line)
	java.text.MessageFormat.<init>(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.getLocalizedMessage(<Unknown Source>:Unknown line)
TRACE 301968:
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	java.text.MessageFormat.applyPattern(<Unknown Source>:Unknown line)
	java.text.MessageFormat.<init>(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
TRACE 300902:
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
TRACE 301967:
	java.lang.AbstractStringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	java.text.MessageFormat.applyPattern(<Unknown Source>:Unknown line)
	java.text.MessageFormat.<init>(<Unknown Source>:Unknown line)
TRACE 300918:
	java.lang.Character.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.hashCode(<Unknown Source>:Unknown line)
	java.io.File.hashCode(<Unknown Source>:Unknown line)
TRACE 300932:
	java.lang.String$CaseInsensitiveComparator.compare(<Unknown Source>:Unknown line)
	java.lang.String$CaseInsensitiveComparator.compare(<Unknown Source>:Unknown line)
	java.lang.String.compareToIgnoreCase(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.compare(<Unknown Source>:Unknown line)
TRACE 302574:
	java.io.BufferedInputStream.getBufIfOpen(<Unknown Source>:Unknown line)
	java.io.BufferedInputStream.read(<Unknown Source>:Unknown line)
	java.io.DataInputStream.readInt(<Unknown Source>:Unknown line)
	java.util.Currency.readIntArray(<Unknown Source>:Unknown line)
TRACE 302963:
	sun.nio.cs.SingleByte$Encoder.encodeArrayLoop(<Unknown Source>:Unknown line)
	sun.nio.cs.SingleByte$Encoder.encodeLoop(<Unknown Source>:Unknown line)
	java.nio.charset.CharsetEncoder.encode(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.implWrite(<Unknown Source>:Unknown line)
TRACE 300898:
	java.lang.StringBuffer.append(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
TRACE 300882:
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
TRACE 300917:
	java.lang.CharacterDataLatin1.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.Character.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.hashCode(<Unknown Source>:Unknown line)
TRACE 301409:
	sun.nio.cs.SingleByte$Decoder.decode(<Unknown Source>:Unknown line)
	sun.nio.cs.SingleByte$Decoder.decodeArrayLoop(<Unknown Source>:Unknown line)
	sun.nio.cs.SingleByte$Decoder.decodeLoop(<Unknown Source>:Unknown line)
	java.nio.charset.CharsetDecoder.decode(<Unknown Source>:Unknown line)
TRACE 302810:
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
	java.text.MessageFormat.subformat(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
TRACE 300893:
	java.io.Win32FileSystem.normalizePrefix(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
TRACE 300945:
	java.io.File.exists(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
TRACE 300947:
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getLoader(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getLoader(<Unknown Source>:Unknown line)
TRACE 301383:
	sun.nio.cs.SingleByte$Decoder.decodeArrayLoop(<Unknown Source>:Unknown line)
	sun.nio.cs.SingleByte$Decoder.decodeLoop(<Unknown Source>:Unknown line)
	java.nio.charset.CharsetDecoder.decode(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamDecoder.implRead(<Unknown Source>:Unknown line)
TRACE 300822:
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
TRACE 300897:
	java.lang.AbstractStringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuffer.append(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
TRACE 300915:
	java.lang.CharacterData.of(<Unknown Source>:Unknown line)
	java.lang.Character.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.hashCode(<Unknown Source>:Unknown line)
TRACE 301467:
	sun.misc.MetaIndex.registerDirectory(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder.<clinit>(<Unknown Source>:Unknown line)
TRACE 301557:
	java.io.Win32FileSystem.canonicalizeWithPrefix(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.canonicalize(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalPath(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalFile(<Unknown Source>:Unknown line)
TRACE 301632:
	sun.misc.URLClassPath.getLoader(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getResource(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getResource(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.getBootstrapResource(<Unknown Source>:Unknown line)
TRACE 301833:
	java.util.ResourceBundle.getBundle(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper$ResourceBundleHolder.<clinit>(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.getLocalizedMessage(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.initHelpMessage(<Unknown Source>:Unknown line)
TRACE 301966:
	java.lang.AbstractStringBuilder.ensureCapacityInternal(<Unknown Source>:Unknown line)
	java.lang.AbstractStringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	java.text.MessageFormat.applyPattern(<Unknown Source>:Unknown line)
TRACE 302957:
	sun.nio.cs.SingleByte$Encoder.encode(<Unknown Source>:Unknown line)
	sun.nio.cs.SingleByte$Encoder.encodeArrayLoop(<Unknown Source>:Unknown line)
	sun.nio.cs.SingleByte$Encoder.encodeLoop(<Unknown Source>:Unknown line)
	java.nio.charset.CharsetEncoder.encode(<Unknown Source>:Unknown line)
TRACE 300894:
	java.lang.String.charAt(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
TRACE 302985:
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.write(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamEncoder.writeBytes(<Unknown Source>:Unknown line)
TRACE 302048:
	java.lang.Integer$IntegerCache.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Integer.valueOf(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.initHelpMessage(<Unknown Source>:Unknown line)
TRACE 300393:
	java.lang.ClassLoader.findBootstrapClassOrNull(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	sun.misc.Launcher$AppClassLoader.loadClass(<Unknown Source>:Unknown line)
TRACE 302237:
	java.util.ArrayList.rangeCheck(<Unknown Source>:Unknown line)
	java.util.ArrayList.get(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getLoader(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.access$000(<Unknown Source>:Unknown line)
TRACE 302099:
	java.lang.Character$CharacterCache.<clinit>(<Unknown Source>:Unknown line)
	java.lang.Character.valueOf(<Unknown Source>:Unknown line)
	sun.util.locale.LocaleExtensions.<clinit>(<Unknown Source>:Unknown line)
	java.util.Locale.getCompatibilityExtensions(<Unknown Source>:Unknown line)
TRACE 302088:
	sun.util.locale.LocaleUtils.caseIgnoreMatch(<Unknown Source>:Unknown line)
	java.util.Locale.getCompatibilityExtensions(<Unknown Source>:Unknown line)
	java.util.Locale.<init>(<Unknown Source>:Unknown line)
	sun.util.LocaleServiceProviderPool.<clinit>(<Unknown Source>:Unknown line)
TRACE 302076:
	sun.util.locale.LocaleUtils.caseIgnoreMatch(<Unknown Source>:Unknown line)
	sun.util.locale.BaseLocale.getInstance(<Unknown Source>:Unknown line)
	java.util.Locale.<init>(<Unknown Source>:Unknown line)
	sun.util.LocaleServiceProviderPool.<clinit>(<Unknown Source>:Unknown line)
TRACE 302270:
	java.util.ServiceLoader$LazyIterator.hasNext(<Unknown Source>:Unknown line)
	java.util.ServiceLoader$1.hasNext(<Unknown Source>:Unknown line)
	sun.util.LocaleServiceProviderPool$1.run(<Unknown Source>:Unknown line)
	sun.util.LocaleServiceProviderPool.<init>(<Unknown Source>:Unknown line)
TRACE 302035:
	sun.launcher.LauncherHelper.getLocalizedMessage(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.initHelpMessage(<Unknown Source>:Unknown line)
TRACE 302028:
	java.text.MessageFormat.subformat(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
	java.text.Format.format(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
TRACE 302027:
	java.lang.String.length(<Unknown Source>:Unknown line)
	java.text.MessageFormat.subformat(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
	java.text.Format.format(<Unknown Source>:Unknown line)
TRACE 302018:
	java.text.AttributedCharacterIterator$Attribute.<clinit>(<Unknown Source>:Unknown line)
	java.text.MessageFormat.subformat(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
	java.text.Format.format(<Unknown Source>:Unknown line)
TRACE 300028:
	java.util.Properties.getProperty(<Unknown Source>:Unknown line)
	java.lang.System.getProperty(<Unknown Source>:Unknown line)
TRACE 301970:
	java.lang.String.<init>(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.toString(<Unknown Source>:Unknown line)
	java.text.MessageFormat.makeFormat(<Unknown Source>:Unknown line)
	java.text.MessageFormat.applyPattern(<Unknown Source>:Unknown line)
TRACE 302272:
	sun.util.LocaleServiceProviderPool$1.run(<Unknown Source>:Unknown line)
	sun.util.LocaleServiceProviderPool.<init>(<Unknown Source>:Unknown line)
	sun.util.LocaleServiceProviderPool.getPool(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
TRACE 302347:
	sun.util.LocaleDataMetaInfo.<clinit>(<Unknown Source>:Unknown line)
	sun.util.resources.LocaleData$LocaleDataResourceBundleControl.getCandidateLocales(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundleImpl(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundle(<Unknown Source>:Unknown line)
TRACE 302359:
	java.util.ArrayList.access$100(<Unknown Source>:Unknown line)
	java.util.ArrayList$Itr.hasNext(<Unknown Source>:Unknown line)
	sun.util.resources.LocaleData$LocaleDataResourceBundleControl.getCandidateLocales(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundleImpl(<Unknown Source>:Unknown line)
TRACE 301965:
	java.lang.String.charAt(<Unknown Source>:Unknown line)
	java.text.MessageFormat.applyPattern(<Unknown Source>:Unknown line)
	java.text.MessageFormat.<init>(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
TRACE 301964:
	java.lang.String.length(<Unknown Source>:Unknown line)
	java.text.MessageFormat.applyPattern(<Unknown Source>:Unknown line)
	java.text.MessageFormat.<init>(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
TRACE 301874:
	java.util.Locale$1.<clinit>(<Unknown Source>:Unknown line)
	java.util.Locale.getDefault(<Unknown Source>:Unknown line)
	java.text.MessageFormat.<init>(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
TRACE 302388:
	java.util.Locale.toString(<Unknown Source>:Unknown line)
	sun.util.resources.LocaleData$LocaleDataResourceBundleControl.getCandidateLocales(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundleImpl(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundle(<Unknown Source>:Unknown line)
TRACE 301792:
	java.util.ResourceBundle$Control$1.run(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$Control.newBundle(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.loadBundle(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.findBundle(<Unknown Source>:Unknown line)
TRACE 301777:
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$FileLoader.getResource(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$FileLoader.findResource(<Unknown Source>:Unknown line)
TRACE 301745:
	sun.misc.URLClassPath.getLoader(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.findResource(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$2.run(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$2.run(<Unknown Source>:Unknown line)
TRACE 301666:
	java.lang.AbstractStringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
	sun.misc.FileURLMapper.getPath(<Unknown Source>:Unknown line)
TRACE 302417:
	java.lang.ref.ReferenceQueue.poll(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.findBundle(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundleImpl(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundle(<Unknown Source>:Unknown line)
TRACE 301627:
	sun.misc.URLClassPath.getLoader(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getLoader(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getResource(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getResource(<Unknown Source>:Unknown line)
TRACE 300055:
	java.util.Properties.getProperty(<Unknown Source>:Unknown line)
	java.util.Properties.getProperty(<Unknown Source>:Unknown line)
	java.lang.System.getProperty(<Unknown Source>:Unknown line)
	sun.misc.PostVMInitHook.trackJavaUsage(<Unknown Source>:Unknown line)
TRACE 301573:
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder.<clinit>(<Unknown Source>:Unknown line)
	sun.misc.Launcher.getBootstrapClassPath(<Unknown Source>:Unknown line)
TRACE 302445:
	java.util.ResourceBundle.getStringArray(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
	java.text.MessageFormat.subformat(<Unknown Source>:Unknown line)
TRACE 301514:
	java.io.File.isDirectory(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.fileToEncodedURL(<Unknown Source>:Unknown line)
	sun.misc.Launcher.getFileURL(<Unknown Source>:Unknown line)
	sun.misc.Launcher.pathToURLs(<Unknown Source>:Unknown line)
TRACE 303018:
	java.io.FileOutputStream.write(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flushBuffer(<Unknown Source>:Unknown line)
	java.io.BufferedOutputStream.flush(<Unknown Source>:Unknown line)
	java.io.PrintStream.write(<Unknown Source>:Unknown line)
TRACE 301479:
	java.io.Win32FileSystem.prefixLength(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalFile(<Unknown Source>:Unknown line)
	sun.misc.Launcher.getFileURL(<Unknown Source>:Unknown line)
	sun.misc.Launcher.pathToURLs(<Unknown Source>:Unknown line)
TRACE 302488:
	java.util.ResourceBundle$CacheKey.equals(<Unknown Source>:Unknown line)
	java.util.concurrent.ConcurrentHashMap.get(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundleImpl(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundle(<Unknown Source>:Unknown line)
TRACE 301426:
	java.util.ArrayList.ensureExplicitCapacity(<Unknown Source>:Unknown line)
	java.util.ArrayList.ensureCapacityInternal(<Unknown Source>:Unknown line)
	java.util.ArrayList.add(<Unknown Source>:Unknown line)
	sun.misc.MetaIndex.registerDirectory(<Unknown Source>:Unknown line)
TRACE 301417:
	java.lang.String.<init>(<Unknown Source>:Unknown line)
	java.io.BufferedReader.readLine(<Unknown Source>:Unknown line)
	java.io.BufferedReader.readLine(<Unknown Source>:Unknown line)
	sun.misc.MetaIndex.registerDirectory(<Unknown Source>:Unknown line)
TRACE 302572:
	java.io.BufferedInputStream.read(<Unknown Source>:Unknown line)
	java.io.DataInputStream.readInt(<Unknown Source>:Unknown line)
	java.util.Currency$1.run(<Unknown Source>:Unknown line)
	java.util.Currency.<clinit>(<Unknown Source>:Unknown line)
TRACE 301387:
	java.nio.charset.CharsetDecoder.decode(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamDecoder.implRead(<Unknown Source>:Unknown line)
	sun.nio.cs.StreamDecoder.read(<Unknown Source>:Unknown line)
	java.io.InputStreamReader.read(<Unknown Source>:Unknown line)
TRACE 302576:
	java.io.DataInputStream.readInt(<Unknown Source>:Unknown line)
	java.util.Currency.readIntArray(<Unknown Source>:Unknown line)
	java.util.Currency.access$000(<Unknown Source>:Unknown line)
	java.util.Currency$1.run(<Unknown Source>:Unknown line)
TRACE 301334:
	java.io.FileReader.<init>(<Unknown Source>:Unknown line)
	sun.misc.MetaIndex.registerDirectory(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
TRACE 301275:
	java.io.Win32FileSystem.resolve(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
	sun.misc.MetaIndex.registerDirectory(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
TRACE 301245:
	java.io.File.isDirectory(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder$1.run(<Unknown Source>:Unknown line)
	sun.misc.Launcher$BootClassPathHolder.<clinit>(<Unknown Source>:Unknown line)
TRACE 301223:
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
	sun.misc.Launcher.getClassPath(<Unknown Source>:Unknown line)
	sun.misc.Launcher.access$200(<Unknown Source>:Unknown line)
TRACE 301206:
	java.lang.String.<init>(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.toString(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$Control.toResourceName(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$Control.newBundle(<Unknown Source>:Unknown line)
TRACE 301181:
	java.io.Win32FileSystem.resolve(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$FileLoader.getResource(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getResource(<Unknown Source>:Unknown line)
TRACE 301146:
	java.lang.String.toCharArray(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.encodePath(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$FileLoader.getResource(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getResource(<Unknown Source>:Unknown line)
TRACE 301142:
	sun.net.www.protocol.file.Handler.parseURL(<Unknown Source>:Unknown line)
	java.net.URL.<init>(<Unknown Source>:Unknown line)
	java.net.URL.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$FileLoader.getResource(<Unknown Source>:Unknown line)
TRACE 301082:
	java.io.File.isDirectory(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.canonicalize(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalPath(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalFile(<Unknown Source>:Unknown line)
TRACE 301079:
	java.io.File.exists(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.canonicalize(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalPath(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalFile(<Unknown Source>:Unknown line)
TRACE 301069:
	java.lang.String.charAt(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.canonicalize(<Unknown Source>:Unknown line)
TRACE 301055:
	java.util.HashMap.indexFor(<Unknown Source>:Unknown line)
	java.util.HashMap.put(<Unknown Source>:Unknown line)
	java.io.ExpiringCache.put(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.canonicalize(<Unknown Source>:Unknown line)
TRACE 301048:
	java.io.Win32FileSystem.parentOrNull(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.canonicalize(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalPath(<Unknown Source>:Unknown line)
	java.io.File.getCanonicalFile(<Unknown Source>:Unknown line)
TRACE 301022:
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.normalize(<Unknown Source>:Unknown line)
	java.io.File.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$FileLoader.<init>(<Unknown Source>:Unknown line)
TRACE 300981:
	sun.misc.MetaIndex.mayContain(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.getResource(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath.getResource(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$1.run(<Unknown Source>:Unknown line)
TRACE 300979:
	java.lang.String.startsWith(<Unknown Source>:Unknown line)
	java.lang.String.startsWith(<Unknown Source>:Unknown line)
	sun.misc.MetaIndex.mayContain(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.getResource(<Unknown Source>:Unknown line)
TRACE 302577:
	java.util.Currency.readIntArray(<Unknown Source>:Unknown line)
	java.util.Currency.access$000(<Unknown Source>:Unknown line)
	java.util.Currency$1.run(<Unknown Source>:Unknown line)
	java.util.Currency.<clinit>(<Unknown Source>:Unknown line)
TRACE 302588:
	java.io.BufferedInputStream.read(<Unknown Source>:Unknown line)
	java.io.DataInputStream.readUnsignedShort(<Unknown Source>:Unknown line)
	java.io.DataInputStream.readUTF(<Unknown Source>:Unknown line)
	java.io.DataInputStream.readUTF(<Unknown Source>:Unknown line)
TRACE 302599:
	java.util.Currency.readStringArray(<Unknown Source>:Unknown line)
	java.util.Currency.access$200(<Unknown Source>:Unknown line)
	java.util.Currency$1.run(<Unknown Source>:Unknown line)
	java.util.Currency.<clinit>(<Unknown Source>:Unknown line)
TRACE 300931:
	java.lang.String.charAt(<Unknown Source>:Unknown line)
	java.lang.String$CaseInsensitiveComparator.compare(<Unknown Source>:Unknown line)
	java.lang.String$CaseInsensitiveComparator.compare(<Unknown Source>:Unknown line)
	java.lang.String.compareToIgnoreCase(<Unknown Source>:Unknown line)
TRACE 300922:
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.hashCode(<Unknown Source>:Unknown line)
	java.io.File.hashCode(<Unknown Source>:Unknown line)
	java.util.HashMap.hash(<Unknown Source>:Unknown line)
TRACE 300921:
	java.lang.String.<init>(<Unknown Source>:Unknown line)
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
	java.io.Win32FileSystem.hashCode(<Unknown Source>:Unknown line)
	java.io.File.hashCode(<Unknown Source>:Unknown line)
TRACE 302609:
	java.io.FileInputStream.close(<Unknown Source>:Unknown line)
	java.io.BufferedInputStream.close(<Unknown Source>:Unknown line)
	java.io.FilterInputStream.close(<Unknown Source>:Unknown line)
	java.util.Currency$1.run(<Unknown Source>:Unknown line)
TRACE 302625:
	java.util.Currency.<clinit>(<Unknown Source>:Unknown line)
	java.text.DecimalFormatSymbols.initialize(<Unknown Source>:Unknown line)
	java.text.DecimalFormatSymbols.<init>(<Unknown Source>:Unknown line)
	java.text.DecimalFormatSymbols.getInstance(<Unknown Source>:Unknown line)
TRACE 300916:
	java.lang.CharacterDataLatin1.getProperties(<Unknown Source>:Unknown line)
	java.lang.CharacterDataLatin1.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.Character.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
TRACE 302654:
	sun.util.LocaleServiceProviderPool.<init>(<Unknown Source>:Unknown line)
	sun.util.LocaleServiceProviderPool.getPool(<Unknown Source>:Unknown line)
	java.util.Currency.getSymbol(<Unknown Source>:Unknown line)
	java.text.DecimalFormatSymbols.initialize(<Unknown Source>:Unknown line)
TRACE 302716:
	java.util.concurrent.ConcurrentHashMap$Segment.<init>(<Unknown Source>:Unknown line)
	java.util.concurrent.ConcurrentHashMap.ensureSegment(<Unknown Source>:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(<Unknown Source>:Unknown line)
	java.text.DecimalFormatSymbols.initialize(<Unknown Source>:Unknown line)
TRACE 302757:
	java.lang.AbstractStringBuilder.<init>(<Unknown Source>:Unknown line)
	java.lang.StringBuffer.<init>(<Unknown Source>:Unknown line)
	java.text.DecimalFormat.applyPattern(<Unknown Source>:Unknown line)
	java.text.DecimalFormat.<init>(<Unknown Source>:Unknown line)
TRACE 302759:
	java.lang.String.charAt(<Unknown Source>:Unknown line)
	java.text.DecimalFormat.applyPattern(<Unknown Source>:Unknown line)
	java.text.DecimalFormat.<init>(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
TRACE 302808:
	java.text.DecimalFormat.applyPattern(<Unknown Source>:Unknown line)
	java.text.DecimalFormat.<init>(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
TRACE 302809:
	java.text.DecimalFormat.<init>(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
	java.text.NumberFormat.getInstance(<Unknown Source>:Unknown line)
	java.text.MessageFormat.subformat(<Unknown Source>:Unknown line)
TRACE 302870:
	java.text.DecimalFormat.subformat(<Unknown Source>:Unknown line)
	java.text.DecimalFormat.format(<Unknown Source>:Unknown line)
	java.text.DecimalFormat.format(<Unknown Source>:Unknown line)
	java.text.DecimalFormat.format(<Unknown Source>:Unknown line)
TRACE 300866:
	java.nio.charset.CharsetDecoder.flush(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
TRACE 300857:
	sun.nio.cs.UTF_8$Decoder.decodeArrayLoop(<Unknown Source>:Unknown line)
	sun.nio.cs.UTF_8$Decoder.decodeLoop(<Unknown Source>:Unknown line)
	java.nio.charset.CharsetDecoder.decode(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
TRACE 300839:
	java.nio.HeapByteBuffer.put(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
TRACE 300832:
	java.lang.CharacterDataLatin1.digit(<Unknown Source>:Unknown line)
	java.lang.Character.digit(<Unknown Source>:Unknown line)
	java.lang.Character.digit(<Unknown Source>:Unknown line)
	java.lang.Integer.parseInt(<Unknown Source>:Unknown line)
TRACE 302911:
	java.text.MessageFormat.<init>(<Unknown Source>:Unknown line)
	java.text.MessageFormat.format(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.getLocalizedMessage(<Unknown Source>:Unknown line)
	sun.launcher.LauncherHelper.appendVmErgoMessage(<Unknown Source>:Unknown line)
TRACE 300821:
	java.lang.AbstractStringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
TRACE 300819:
	java.lang.String.charAt(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
TRACE 300813:
	java.nio.charset.CharsetDecoder.reset(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders.decoderFor(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
TRACE 300808:
	sun.nio.cs.UTF_8.newDecoder(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders$1.create(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders$Cache.forName(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders.decoderFor(<Unknown Source>:Unknown line)
TRACE 300746:
	java.lang.Class.forName(<Unknown Source>:Unknown line)
	sun.nio.cs.FastCharsetProvider.lookup(<Unknown Source>:Unknown line)
	sun.nio.cs.FastCharsetProvider.charsetForName(<Unknown Source>:Unknown line)
	java.nio.charset.Charset.lookup2(<Unknown Source>:Unknown line)
TRACE 300707:
	java.lang.ThreadLocal.get(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders$Cache.forName(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders.decoderFor(<Unknown Source>:Unknown line)
	sun.net.www.ParseUtil.decode(<Unknown Source>:Unknown line)
TRACE 300694:
	java.lang.ThreadLocal$ThreadLocalMap.access$000(<Unknown Source>:Unknown line)
	java.lang.ThreadLocal.get(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders$Cache.forName(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders.decoderFor(<Unknown Source>:Unknown line)
TRACE 300671:
	java.lang.Class.getClassLoader(<Unknown Source>:Unknown line)
	java.lang.Class.desiredAssertionStatus(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders$1.<clinit>(<Unknown Source>:Unknown line)
	sun.nio.cs.ThreadLocalCoders.<clinit>(<Unknown Source>:Unknown line)
TRACE 300631:
	java.lang.Character.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
	java.net.URL.<init>(<Unknown Source>:Unknown line)
TRACE 300625:
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
TRACE 300618:
	java.lang.AbstractStringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	java.lang.StringBuilder.append(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
TRACE 300611:
	java.net.URLStreamHandler.toExternalForm(<Unknown Source>:Unknown line)
	java.net.URL.toExternalForm(<Unknown Source>:Unknown line)
	java.net.URL.toString(<Unknown Source>:Unknown line)
	java.lang.String.valueOf(<Unknown Source>:Unknown line)
TRACE 300597:
	java.net.URL.getPath(<Unknown Source>:Unknown line)
	java.net.URLStreamHandler.toExternalForm(<Unknown Source>:Unknown line)
	java.net.URL.toExternalForm(<Unknown Source>:Unknown line)
	java.net.URL.toString(<Unknown Source>:Unknown line)
TRACE 300593:
	java.lang.StringBuilder.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.<init>(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$3.run(<Unknown Source>:Unknown line)
TRACE 300549:
	java.lang.CharacterDataLatin1.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.Character.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.Character.toLowerCase(<Unknown Source>:Unknown line)
	java.lang.String.toLowerCase(<Unknown Source>:Unknown line)
TRACE 300527:
	java.util.Arrays.copyOf(<Unknown Source>:Unknown line)
	java.lang.String.concat(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$1.run(<Unknown Source>:Unknown line)
	java.net.URLClassLoader$1.run(<Unknown Source>:Unknown line)
TRACE 300481:
	java.util.ResourceBundle.putBundleInCache(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.findBundle(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.findBundle(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.findBundle(<Unknown Source>:Unknown line)
TRACE 300397:
	java.lang.ClassLoader.loadClass(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$RBClassLoader.loadClass(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$Control.newBundle(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.loadBundle(<Unknown Source>:Unknown line)
TRACE 302243:
	sun.misc.MetaIndex.mayContain(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$JarLoader.getResource(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$2.next(<Unknown Source>:Unknown line)
	sun.misc.URLClassPath$2.hasMoreElements(<Unknown Source>:Unknown line)
TRACE 300336:
	java.util.ResourceBundle$CacheKey.calculateHashCode(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$CacheKey.setLocale(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.findBundle(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.findBundle(<Unknown Source>:Unknown line)
TRACE 300282:
	java.util.ResourceBundle$Control$CandidateListCache.getDefaultList(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$Control$CandidateListCache.createObject(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$Control$CandidateListCache.createObject(<Unknown Source>:Unknown line)
	sun.util.locale.LocaleObjectCache.get(<Unknown Source>:Unknown line)
TRACE 300265:
	java.util.Locale$LocaleKey.<init>(<Unknown Source>:Unknown line)
	java.util.Locale.getInstance(<Unknown Source>:Unknown line)
	java.util.Locale.getInstance(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$Control$CandidateListCache.getDefaultList(<Unknown Source>:Unknown line)
TRACE 300264:
	java.util.Locale$LocaleKey.<init>(<Unknown Source>:Unknown line)
	java.util.Locale$LocaleKey.<init>(<Unknown Source>:Unknown line)
	java.util.Locale.getInstance(<Unknown Source>:Unknown line)
	java.util.Locale.getInstance(<Unknown Source>:Unknown line)
TRACE 300258:
	java.util.concurrent.ConcurrentHashMap.get(<Unknown Source>:Unknown line)
	sun.util.locale.LocaleObjectCache.get(<Unknown Source>:Unknown line)
	sun.util.locale.BaseLocale.getInstance(<Unknown Source>:Unknown line)
	java.util.Locale.getInstance(<Unknown Source>:Unknown line)
TRACE 300207:
	java.util.ResourceBundle$CacheKey.getLoader(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$CacheKey.calculateHashCode(<Unknown Source>:Unknown line)
	java.util.ResourceBundle$CacheKey.<init>(<Unknown Source>:Unknown line)
	java.util.ResourceBundle.getBundleImpl(<Unknown Source>:Unknown line)
CPU TIME (ms) BEGIN (total = 226) Fri May 30 22:50:55 2014
rank   self  accum   count trace method
   1  7.52%  7.52%    3584 302575 java.io.BufferedInputStream.read
   2  6.64% 14.16%       7 301985 java.text.MessageFormat.applyPattern
   3  3.54% 17.70%    2212 301968 java.lang.StringBuilder.append
   4  3.10% 20.80%      16 300902 java.io.Win32FileSystem.normalize
   5  3.10% 23.89%    2212 301967 java.lang.AbstractStringBuilder.append
   6  2.65% 26.55%    1262 300918 java.lang.Character.toLowerCase
   7  2.65% 29.20%      20 300932 java.lang.String$CaseInsensitiveComparator.compare
   8  2.21% 31.42%    3584 302574 java.io.BufferedInputStream.getBufIfOpen
   9  2.21% 33.63%       2 302963 sun.nio.cs.SingleByte$Encoder.encodeArrayLoop
  10  1.77% 35.40%     802 300898 java.lang.StringBuffer.append
  11  1.77% 37.17%      16 300882 sun.net.www.ParseUtil.decode
  12  1.77% 38.94%    1262 300917 java.lang.CharacterDataLatin1.toLowerCase
  13  1.77% 40.71%    2190 301409 sun.nio.cs.SingleByte$Decoder.decode
  14  0.88% 41.59%       4 302810 java.text.NumberFormat.getInstance
  15  0.88% 42.48%      19 300893 java.io.Win32FileSystem.normalizePrefix
  16  0.88% 43.36%      14 300945 java.io.File.exists
  17  0.88% 44.25%      17 300947 sun.misc.URLClassPath$3.run
  18  0.88% 45.13%       3 301383 sun.nio.cs.SingleByte$Decoder.decodeArrayLoop
  19  0.88% 46.02%     702 300822 java.lang.StringBuilder.append
  20  0.88% 46.90%     802 300897 java.lang.AbstractStringBuilder.append
  21  0.88% 47.79%    1262 300915 java.lang.CharacterData.of
  22  0.88% 48.67%       2 301467 sun.misc.MetaIndex.registerDirectory
  23  0.88% 49.56%       6 301557 java.io.Win32FileSystem.canonicalizeWithPrefix
  24  0.88% 50.44%      14 301632 sun.misc.URLClassPath.getLoader
  25  0.88% 51.33%       1 301833 java.util.ResourceBundle.getBundle
  26  0.88% 52.21%    2212 301966 java.lang.AbstractStringBuilder.ensureCapacityInternal
  27  0.88% 53.10%    2255 302957 sun.nio.cs.SingleByte$Encoder.encode
  28  0.88% 53.98%     907 300894 java.lang.String.charAt
  29  0.88% 54.87%       1 302985 java.io.FileOutputStream.write
  30  0.88% 55.75%       1 302048 java.lang.Integer$IntegerCache.<clinit>
  31  0.88% 56.64%       8 300393 java.lang.ClassLoader.findBootstrapClassOrNull
  32  0.44% 57.08%      42 302237 java.util.ArrayList.rangeCheck
  33  0.44% 57.52%       1 302099 java.lang.Character$CharacterCache.<clinit>
  34  0.44% 57.96%       5 302088 sun.util.locale.LocaleUtils.caseIgnoreMatch
  35  0.44% 58.41%       6 302076 sun.util.locale.LocaleUtils.caseIgnoreMatch
  36  0.44% 58.85%       3 302270 java.util.ServiceLoader$LazyIterator.hasNext
  37  0.44% 59.29%       3 302035 sun.launcher.LauncherHelper.getLocalizedMessage
  38  0.44% 59.73%       7 302028 java.text.MessageFormat.subformat
  39  0.44% 60.18%       7 302027 java.lang.String.length
  40  0.44% 60.62%       1 302018 java.text.AttributedCharacterIterator$Attribute.<clinit>
  41  0.44% 61.06%      15 300028 java.util.Properties.getProperty
  42  0.44% 61.50%      24 301970 java.lang.String.<init>
  43  0.44% 61.95%       1 302272 sun.util.LocaleServiceProviderPool$1.run
  44  0.44% 62.39%       1 302347 sun.util.LocaleDataMetaInfo.<clinit>
  45  0.44% 62.83%       8 302359 java.util.ArrayList.access$100
  46  0.44% 63.27%    2236 301965 java.lang.String.charAt
  47  0.44% 63.72%    2243 301964 java.lang.String.length
  48  0.44% 64.16%       1 301874 java.util.Locale$1.<clinit>
  49  0.44% 64.60%       6 302388 java.util.Locale.toString
  50  0.44% 65.04%       2 301792 java.util.ResourceBundle$Control$1.run
  51  0.44% 65.49%       2 301777 java.io.Win32FileSystem.normalize
  52  0.44% 65.93%      22 301745 sun.misc.URLClassPath.getLoader
  53  0.44% 66.37%      79 301666 java.lang.AbstractStringBuilder.append
  54  0.44% 66.81%       2 302417 java.lang.ref.ReferenceQueue.poll
  55  0.44% 67.26%       8 301627 sun.misc.URLClassPath.getLoader
  56  0.44% 67.70%       1 300055 java.util.Properties.getProperty
  57  0.44% 68.14%       1 301573 sun.misc.Launcher$BootClassPathHolder$1.run
  58  0.44% 68.58%       1 302445 java.util.ResourceBundle.getStringArray
  59  0.44% 69.03%       8 301514 java.io.File.isDirectory
  60  0.44% 69.47%       1 303018 java.io.FileOutputStream.write
  61  0.44% 69.91%       8 301479 java.io.Win32FileSystem.prefixLength
  62  0.44% 70.35%       1 302488 java.util.ResourceBundle$CacheKey.equals
  63  0.44% 70.80%      88 301426 java.util.ArrayList.ensureExplicitCapacity
  64  0.44% 71.24%     100 301417 java.lang.String.<init>
  65  0.44% 71.68%      20 302572 java.io.BufferedInputStream.read
  66  0.44% 72.12%       3 301387 java.nio.charset.CharsetDecoder.decode
  67  0.44% 72.57%     896 302576 java.io.DataInputStream.readInt
  68  0.44% 73.01%       1 301334 java.io.FileReader.<init>
  69  0.44% 73.45%       9 301275 java.io.Win32FileSystem.resolve
  70  0.44% 73.89%       8 301245 java.io.File.isDirectory
  71  0.44% 74.34%       8 301223 java.io.Win32FileSystem.normalize
  72  0.44% 74.78%       2 301206 java.lang.String.<init>
  73  0.44% 75.22%       2 301181 java.io.Win32FileSystem.resolve
  74  0.44% 75.66%       2 301146 java.lang.String.toCharArray
  75  0.44% 76.11%       8 301142 sun.net.www.protocol.file.Handler.parseURL
  76  0.44% 76.55%       3 301082 java.io.File.isDirectory
  77  0.44% 76.99%       4 301079 java.io.File.exists
  78  0.44% 77.43%     167 301069 java.lang.String.charAt
  79  0.44% 77.88%      11 301055 java.util.HashMap.indexFor
  80  0.44% 78.32%      14 301048 java.io.Win32FileSystem.parentOrNull
  81  0.44% 78.76%       1 301022 java.io.Win32FileSystem.normalize
  82  0.44% 79.20%      16 300981 sun.misc.MetaIndex.mayContain
  83  0.44% 79.65%     324 300979 java.lang.String.startsWith
  84  0.44% 80.09%       7 302577 java.util.Currency.readIntArray
  85  0.44% 80.53%      82 302588 java.io.BufferedInputStream.read
  86  0.44% 80.97%       2 302599 java.util.Currency.readStringArray
  87  0.44% 81.42%    1606 300931 java.lang.String.charAt
  88  0.44% 81.86%      32 300922 java.lang.String.toLowerCase
  89  0.44% 82.30%      32 300921 java.lang.String.<init>
  90  0.44% 82.74%       1 302609 java.io.FileInputStream.close
  91  0.44% 83.19%       1 302625 java.util.Currency.<clinit>
  92  0.44% 83.63%    1262 300916 java.lang.CharacterDataLatin1.getProperties
  93  0.44% 84.07%       1 302654 sun.util.LocaleServiceProviderPool.<init>
  94  0.44% 84.51%       1 302716 java.util.concurrent.ConcurrentHashMap$Segment.<init>
  95  0.44% 84.96%      16 302757 java.lang.AbstractStringBuilder.<init>
  96  0.44% 85.40%      92 302759 java.lang.String.charAt
  97  0.44% 85.84%       4 302808 java.text.DecimalFormat.applyPattern
  98  0.44% 86.28%       4 302809 java.text.DecimalFormat.<init>
  99  0.44% 86.73%       4 302870 java.text.DecimalFormat.subformat
 100  0.44% 87.17%      16 300866 java.nio.charset.CharsetDecoder.flush
 101  0.44% 87.61%      18 300857 sun.nio.cs.UTF_8$Decoder.decodeArrayLoop
 102  0.44% 88.05%      16 300839 java.nio.HeapByteBuffer.put
 103  0.44% 88.50%      48 300832 java.lang.CharacterDataLatin1.digit
 104  0.44% 88.94%       1 302911 java.text.MessageFormat.<init>
 105  0.44% 89.38%     702 300821 java.lang.AbstractStringBuilder.append
 106  0.44% 89.82%     718 300819 java.lang.String.charAt
 107  0.44% 90.27%      16 300813 java.nio.charset.CharsetDecoder.reset
 108  0.44% 90.71%       1 300808 sun.nio.cs.UTF_8.newDecoder
 109  0.44% 91.15%       1 300746 java.lang.Class.forName
 110  0.44% 91.59%      18 300707 java.lang.ThreadLocal.get
 111  0.44% 92.04%      18 300694 java.lang.ThreadLocal$ThreadLocalMap.access$000
 112  0.44% 92.48%       1 300671 java.lang.Class.getClassLoader
 113  0.44% 92.92%      80 300631 java.lang.Character.toLowerCase
 114  0.44% 93.36%      16 300625 java.lang.StringBuilder.append
 115  0.44% 93.81%      16 300618 java.lang.AbstractStringBuilder.append
 116  0.44% 94.25%      16 300611 java.net.URLStreamHandler.toExternalForm
 117  0.44% 94.69%      64 300597 java.net.URL.getPath
 118  0.44% 95.13%      16 300593 java.lang.StringBuilder.<init>
 119  0.44% 95.58%     180 300549 java.lang.CharacterDataLatin1.toLowerCase
 120  0.44% 96.02%       4 300527 java.util.Arrays.copyOf
 121  0.44% 96.46%       2 300481 java.util.ResourceBundle.putBundleInCache
 122  0.44% 96.90%       8 300397 java.lang.ClassLoader.loadClass
 123  0.44% 97.35%      18 302243 sun.misc.MetaIndex.mayContain
 124  0.44% 97.79%       5 300336 java.util.ResourceBundle$CacheKey.calculateHashCode
 125  0.44% 98.23%       2 300282 java.util.ResourceBundle$Control$CandidateListCache.getDefaultList
 126  0.44% 98.67%       4 300265 java.util.Locale$LocaleKey.<init>
 127  0.44% 99.12%       5 300264 java.util.Locale$LocaleKey.<init>
 128  0.44% 99.56%       5 300258 java.util.concurrent.ConcurrentHashMap.get
 129  0.44% 100.00%       4 300207 java.util.ResourceBundle$CacheKey.getLoader
CPU TIME (ms) END
