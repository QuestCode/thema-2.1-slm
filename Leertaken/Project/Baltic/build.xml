<?xml version="1.0"?>
<project name="Baltic" default="run">

	<property name="dir.src" value="src"/>
	<property name="dir.scripts" value="scripts"/>
	<property name="dir.temp" value="temp"/>
	<property name="dir.resources" value="resources"/>
	<property name="dir.public" value="${dir.src}/public"/>
	<property name="dir.assets" value="${dir.src}/client/assets"/>
	<property name="dir.geo" value="${dir.public}/geo"/>
	<property name="dir.html" value="html"/>

	<property name="dir.bootstrap" value="${dir.resources}/bootstrap-3.1.1"/>

	<target name="run">
		<exec executable="vagrant">
			<arg value="up"/>
		</exec>

		<exec executable="vagrant">
			<arg value="ssh"/>
			<arg line="-- /vagrant/${dir.scripts}/run.sh"/>
		</exec>
	</target>

	<target name="setup">
		<mkdir dir="${dir.temp}"/>
		<mkdir dir="${dir.geo}"/>

		<antcall target="db:setup"/>
		<antcall target="generate-map"/>

		<antcall target="bootstrap:setup"/>
		<antcall target="bootstrap"/>
	</target>

	<target name="clearTemp">
		<delete includeemptydirs="true">
	    <fileset dir="${dir.temp}" includes="*" defaultexcludes="false"/>
	  </delete>
	</target>

	<target name="db:setup">
		<exec executable="vagrant">
			<arg value="ssh" />
			<arg line="-- mongo meteor /vagrant/${dir.scripts}/db.setup.js" />
		</exec>

		<exec executable="mongoimport">
			<arg line="--db meteor" />
			<arg line="--collection stations" />
			<arg line="--type json" />
			<arg line="--file resources/stations.json" />
			<arg line="--jsonArray" />
		</exec>
	</target>

	<target name="db:reset">
		<exec executable="vagrant">
			<arg value="ssh" />
			<arg line="-- mongo meteor /vagrant/${dir.scripts}/db.reset.js" />
		</exec>
		<antcall target="db:setup"/>
	</target>

	<target name="generate-map">
		<delete file="${dir.geo}/baltic.json"/>

		<antcall target="clearTemp"/>
		
		<exec executable="vagrant">
			<arg value="ssh"/>
			<arg line="-- /vagrant/${dir.scripts}/generate-map-baltic.sh"/>
		</exec>

		<antcall target="clearTemp"/>
	</target>

	<target name="bootstrap:setup">
		<condition property="npm" value="npm.cmd" else="npm">
			<os family="windows"/>
		</condition>

		<exec dir="${dir.bootstrap}" executable="${npm} install"/>
	</target>

	<target name="bootstrap">

		<condition property="grunt" value="grunt.cmd" else="grunt">
			<os family="windows"/>
		</condition>

		<exec dir="${dir.bootstrap}" executable="${grunt}">
			<arg value="dist"/>
		</exec>

		<copy todir="${dir.assets}">
			<fileset dir="${dir.bootstrap}/dist/">
				<exclude name="**/*.min*"/>
				<exclude name="**/*.map*"/>
			</fileset>
		</copy>
	</target>
</project>